stages:
  - test
  - docker
  - release

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE   # GitLabâ€™s container registry
  PYTHON_VERSION: "3.11"

# ------------------------
# Test job
# ------------------------
test:
  stage: test
  image: python:3.11
  services: []
  before_script:
    - python -m pip install --upgrade pip
    - pip install -e .[dev]
  script:
    - pytest --cov=src/deforestation --cov-fail-under=80
  coverage: '/^TOTAL.*\s+(\d+\%)$/'

# ------------------------
# Docker build & push
# ------------------------
docker-build:
  stage: docker
  image: docker:24
  services:
    - docker:24-dind
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"'
      when: always
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY
  script:
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHA .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHA
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" || "$CI_COMMIT_BRANCH" == "master" ]]; then
        docker tag $IMAGE_NAME:$CI_COMMIT_SHA $IMAGE_NAME:latest
        docker push $IMAGE_NAME:latest
      fi

# ------------------------
# PyPI Release
# ------------------------
pypi-release:
  stage: release
  image: python:3.11
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+/'
  before_script:
    - python -m pip install --upgrade pip build twine
  script:
    - python -m build
    - twine upload dist/* -u __token__ -p $PYPI_API_TOKEN
